services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: "./docker/prod/Dockerfile"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - API_URL=${API_URL}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
    volumes:
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    restart: always

  postgres:
    container_name: p
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    environment:
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
    ports:
      - "7181:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/files/dashboards
      - ./grafana/structure.yaml:/etc/grafana/provisioning/dashboards/main.yaml
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=https://prometheus.laporteacote.online'
    ports:
      - "9090:9090"
  loki:
    image: grafana/loki:latest
    container_name: app_loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - ./logs:/var/log
      - ./loki/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
volumes:
  postgres_data:
  prometheus:
  grafana_volume:
